#!/usr/bin/env groovy

pipeline {
    agent any
    tools {
        maven 'maven-3.6'
    }
    stages {
        stage("increment version") {
            steps {
                script {
                    echo 'incrementing app version'
                    // this command will increment the version in pom.xml file by 1 in the lowest number (1.1.1 => 1.1.2)
                    sh 'mvn build-helper:parse-version versions:set -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                        versions:commit'
                    // READ VERSION FROM EDITED POM.XML FILE VIA GROOVY
                    def matcher = readFile('pom.xml') =~ <'version>(.+)</version>'
                    env.IMAGE_NAME = matcher[0][1]
                }
            }
        }
        stage('build app') {
            steps {
                script {
                    echo "building the application..."
                    // builds jar file with version from pom.xml, it deletes the target folder before building the package, so we only have newest jar file
                    sh 'mvn clean package'
                }
            }
        }
        stage('build image') {
            steps {
                script {
                    echo "building the docker image..."
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-repo', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                        sh "docker build -t nanajanashia/demo-app:${IMAGE_NAME} ."
                        sh "echo $PASS | docker login -u $USER --password-stdin"
                        sh "docker push nanajanashia/demo-app:${IMAGE_NAME}"
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    echo 'deploying docker image to EC2...'
                }
            }
        }
    }
}

